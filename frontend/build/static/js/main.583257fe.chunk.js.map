{"version":3,"sources":["components/TaskList.js","components/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["TaskList","tasks","setTasks","useState","useEffect","fetch","then","res","json","data","React","createElement","map","task","key","id","title","description","onClick","async","method","filter","deleteTask","TaskForm","setTitle","setDescription","onSubmit","e","preventDefault","headers","Content-Type","body","JSON","stringify","type","placeholder","value","onChange","target","required","App","message","setMessage","response","text","style","textAlign","marginTop","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA+BeA,MA7BEA,KACf,MAAOC,EAAOC,GAAYC,mBAAS,IAEnCC,oBAAU,KACRC,MAAM,mCACHC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQP,EAASO,KACxB,IAOH,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,UACGV,EAAMW,IAAIC,GACTH,IAAAC,cAAA,MAAIG,IAAKD,EAAKE,IACXF,EAAKG,MAAM,MAAIH,EAAKI,YACrBP,IAAAC,cAAA,UAAQO,QAASA,IAZRC,iBACXd,yCAAyCU,IAAM,CAAEK,OAAQ,WAC/DlB,EAASD,EAAMoB,OAAOR,GAAQA,EAAKE,KAAOA,KAUXO,CAAWT,EAAKE,KAAK,eCIzCQ,MAzBEA,KACf,MAAOP,EAAOQ,GAAYrB,mBAAS,KAC5Bc,EAAaQ,GAAkBtB,mBAAS,IAc/C,OACEO,IAAAC,cAAA,QAAMe,SAbaP,UACnBQ,EAAEC,uBACIvB,MAAM,kCAAmC,CAC7Ce,OAAQ,OACRS,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEjB,QAAOC,kBAGhCO,EAAS,IACTC,EAAe,MAKbf,IAAAC,cAAA,SAAOuB,KAAK,OAAOC,YAAY,QAAQC,MAAOpB,EAAOqB,SAAWV,GAAMH,EAASG,EAAEW,OAAOF,OAAQG,UAAQ,IACxG7B,IAAAC,cAAA,SAAOuB,KAAK,OAAOC,YAAY,cAAcC,MAAOnB,EAAaoB,SAAWV,GAAMF,EAAeE,EAAEW,OAAOF,OAAQG,UAAQ,IAC1H7B,IAAAC,cAAA,UAAQuB,KAAK,UAAS,cCGbM,MArBf,WAEE,MAAMC,EAASC,GAAYvC,mBAAS,IAQpC,OANAC,oBAAU,KACRC,MAAM,yBACLC,KAAMqC,GAAWA,EAASC,QAC1BtC,KAAMG,GAAOiC,EAAWjC,KACzB,IAGAC,IAAAC,cAAA,OAAKkC,MAAO,CAACC,UAAW,SAASC,UAAW,SAC1CrC,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,SAAI8B,GACJ/B,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAACY,EAAQ,MACTb,IAAAC,cAACX,EAAQ,QCRAgD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAxB,EAAA,GAAArB,KAAA6C,EAAAC,KAAA,UAAqB9C,KAAK+C,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAAC6B,EAAG,QAORQ","file":"static/js/main.583257fe.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/tasks')\r\n      .then(res => res.json())\r\n      .then(data => setTasks(data));\r\n  }, []);\r\n\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:5000/api/tasks/${id}`, { method: 'DELETE' });\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task List</h2>\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.description}\r\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState } from 'react';\r\n\r\nconst TaskForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await fetch('http://localhost:5000/api/tasks', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ title, description })\r\n    });\r\n\r\n    setTitle('');\r\n    setDescription('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n      <input type=\"text\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} required />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport TaskList from './components/TaskList';\r\nimport TaskForm from './components/TaskForm';\r\n\r\nfunction App(){\r\n\r\n  const[message, setMessage]=useState('');\r\n\r\n  useEffect(()=>{\r\n    fetch('http://localhost:5000')\r\n    .then((response)=>response.text())\r\n    .then((data)=>setMessage(data));\r\n  },[]);\r\n\r\n  return(\r\n    <div style={{textAlign: 'center',marginTop: '50px'}}>\r\n      <h1>React Frontend</h1>\r\n      <p>{message}</p>\r\n      <h1>Task Management</h1>\r\n      <TaskForm />\r\n      <TaskList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}